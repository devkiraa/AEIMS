<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Inventory and In Service</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
        }
        .hidden { display: none; }
    </style>
</head>
<body class="bg-gray-50">
    <!-- Navbar -->
    <nav class="bg-blue-600 p-4">
        <div class="container mx-auto flex justify-between items-center">
            <!-- Navbar Links -->
            <div class="flex items-center space-x-6">
                <ul class="flex space-x-6 text-white">
                    <!-- Home Link - Always First -->
                    <li><a href="/" class="hover:text-gray-300">Home</a></li>
            
                    <!-- Conditional Links for 'admin' or 'icts' -->
                    <% if (userRole === 'admin' || userRole === 'icts') { %>
                        <li><a href="/book-event" class="hover:text-gray-300">Book</a></li>
                        <li><a href="/user-management" class="hover:text-gray-300">Users</a></li>
                        <li><a href="/inventory" class="hover:text-gray-300">Inventory</a></li>
                        <li><a href="/my-events" class="hover:text-gray-300">My Events</a></li>
                    <% } %>
            
                    <!-- Conditional Links for 'hod' -->
                    <% if (userRole === 'hod') { %>
                        <li><a href="/book-event" class="hover:text-gray-300">Book</a></li>
                        <li><a href="/user-management" class="hover:text-gray-300">Users</a></li>
                        <li><a href="/dept-events" class="hover:text-gray-300">Dept Events</a></li>
                        <li><a href="/event-approval" class="hover:text-gray-300">Approval</a></li>
                    <% } %>
            
                    <!-- Conditional Links for 'em' -->
                    <% if (userRole === 'em') { %>
                        <li><a href="/book-event" class="hover:text-gray-300">Book</a></li>
                        <li><a href="/my-events" class="hover:text-gray-300">My Events</a></li>
                    <% } %>
            
                    <!-- About Us Link - Always Last -->
                    <li><a href="/about-us" class="hover:text-gray-300">About Us</a></li>
                </ul>
            </div>         

            <!-- Profile Dropdown (Visible on Click) -->
            <div class="relative dropdown">
                <button class="bg-white rounded-full p-2" id="profileButton">
                    <img src="/assets/icons/avatar.svg" alt="User Icon" class="w-6 h-6">
                </button>
                <div class="dropdown-menu absolute hidden right-0 mt-2 w-48 bg-white rounded-lg shadow-lg" id="profileDropdown">
                    <a href="/profile" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">Profile</a>
                    <a href="/change-password" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">Change Password</a>
                    <a href="/logout" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">Logout</a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="container mx-auto p-6 max-w-5xl">
        <!-- Inventory Section -->
        <section>
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-2xl font-semibold">Inventory</h2>
                <button id="addInventoryBtn" class="bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded flex items-center">
                    Add
                    <svg xmlns="http://www.w3.org/2000/svg" class="ml-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
                    </svg>
                </button>
            </div>
            <div class="bg-white shadow-md rounded-lg">
                <table class="min-w-full bg-white" id="inventoryTable">
                    <thead>
                        <tr class="bg-blue-50 text-gray-600">
                            <th class="p-4">Item</th>
                            <th class="p-4">First Added Date</th>
                            <th class="p-4">Quantity</th>
                            <th class="p-4">Add to Service</th>
                            <th class="p-4">Action</th>
                        </tr>
                    </thead>
                    <tbody id="inventoryBody">
                        <!-- Inventory items will be dynamically inserted here -->
                    </tbody>
                </table>
            </div>
        </section>

        <!-- In Service Section -->
        <section class="mt-12">
            <h2 class="text-2xl font-semibold mb-4">In Service</h2>
            <div class="bg-white shadow-md rounded-lg">
                <table class="min-w-full bg-white">
                    <thead>
                        <tr class="bg-blue-50 text-gray-600">
                            <th class="p-4">Item Name</th>
                            <th class="p-4">Service Date</th>
                            <th class="p-4">Action</th>
                        </tr>
                    </thead>
                    <tbody id="serviceBody">
                        <!-- Service items will be dynamically inserted here -->
                    </tbody>
                </table>
            </div>
        </section>
    </main>

    <!-- Modal for adding inventory -->
    <div id="addInventoryModal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden">
        <div class="bg-white p-6 rounded-lg shadow-lg w-96">
            <h2 class="text-2xl font-semibold mb-4">Add New Inventory Item</h2>
            <form id="addInventoryForm">
                <div class="mb-4">
                    <label for="inv_prd_name" class="block text-gray-700">Product Name:</label>
                    <input type="text" id="inv_prd_name" class="w-full px-3 py-2 border border-gray-300 rounded" required>
                </div>
                <div class="mb-4">
                    <label for="inv_item_count" class="block text-gray-700">Item Count:</label>
                    <input type="number" id="inv_item_count" class="w-full px-3 py-2 border border-gray-300 rounded" required>
                </div>
                <input type="hidden" id="inv_id">
                <input type="hidden" id="inv_first_added">
                <div class="flex justify-end space-x-4">
                    <button type="button" class="bg-gray-500 text-white py-2 px-4 rounded" onclick="closeModal()">Cancel</button>
                    <button type="submit" class="bg-blue-500 text-white py-2 px-4 rounded">Add</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Modal for adding to service -->
    <div id="addToServiceModal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden">
        <div class="bg-white p-6 rounded-lg shadow-lg w-96">
            <h2 class="text-2xl font-semibold mb-4">Add to Service</h2>
            <p id="inventoryDetails" class="mb-4"></p>
            <form id="addToServiceForm">
                <div class="mb-4">
                    <label for="service_item_count" class="block text-gray-700">Number of items to service:</label>
                    <input type="number" id="service_item_count" class="w-full px-3 py-2 border border-gray-300 rounded" required>
                </div>
                <div class="flex justify-end space-x-4">
                    <button type="button" class="bg-gray-500 text-white py-2 px-4 rounded" onclick="closeServiceModal()">Cancel</button>
                    <button type="submit" class="bg-blue-500 text-white py-2 px-4 rounded">OK</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Load inventory data on page load
        async function loadInventory() {
            try {
                const response = await fetch('/api/inventory');
                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }
                const inventoryItems = await response.json();
    
                // Clear the table before adding new items
                document.getElementById('inventoryBody').innerHTML = '';
    
                inventoryItems.forEach(item => {
                    const newRow = `
                        <tr>
                            <td class="p-4">${item.inv_prd_name}</td>
                            <td class="p-4">${new Date(item.inv_first_added).toLocaleDateString()}</td>
                            <td class="p-4">${item.inv_item_count}</td>
                            <td class="p-4 text-center">
                                <button class="text-blue-500 hover:text-blue-700" onclick="showAddToServiceModal(this)">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 inline-block" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
                                    </svg>
                                </button>
                            </td>
                            <td class="p-4 text-center">
                                <button class="text-gray-500 hover:text-red-600" onclick="deleteRow(this)">
                                    <img src="/assets/icons/delete_24dp_6B7280_FILL0_wght500_GRAD0_opsz24.svg" alt="Delete Icon" class="w-6 h-6">
                                </button>
                                <button class="text-gray-500 hover:text-green-600" onclick="editRow(this)">
                                    <img src="/assets/icons/edit_24dp_6B7280_FILL0_wght500_GRAD0_opsz24.svg" alt="Edit Icon" class="w-6 h-6">
                                </button>
                            </td>
                        </tr>
                    `;
                    document.getElementById('inventoryBody').insertAdjacentHTML('beforeend', newRow);
                });
            } catch (error) {
                console.error('Error loading inventory:', error);
            }
        }
    
        // Modal handling functions
        document.getElementById('addInventoryBtn').addEventListener('click', function () {
            openModal();
        });
    
        function openModal() {
            const inv_id = 'INV' + Date.now();
            document.getElementById('inv_id').value = inv_id;
            const currentDate = new Date().toLocaleDateString('en-GB', { day: 'numeric', month: 'long', year: 'numeric' });
            document.getElementById('inv_first_added').value = currentDate;
            document.getElementById('addInventoryModal').classList.remove('hidden');
        }
    
        function closeModal() {
            document.getElementById('addInventoryModal').classList.add('hidden');
        }
    
        document.getElementById('addInventoryForm').addEventListener('submit', async function (e) {
            e.preventDefault();
            const inv_prd_name = document.getElementById('inv_prd_name').value;
            const inv_item_count = document.getElementById('inv_item_count').value;
            const inv_first_added = document.getElementById('inv_first_added').value;
    
            const newRow = `
                <tr>
                    <td class="p-4">${inv_prd_name}</td>
                    <td class="p-4">${inv_first_added}</td>
                    <td class="p-4">${inv_item_count}</td>
                    <td class="p-4 text-center">
                        <button class="text-blue-500 hover:text-blue-700" onclick="showAddToServiceModal(this)">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 inline-block" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
                            </svg>
                        </button>
                    </td>
                    <td class="p-4 text-center">
                        <button class="text-gray-500 hover:text-red-600" onclick="deleteRow(this)">
                            <img src="/assets/icons/delete_24dp_6B7280_FILL0_wght500_GRAD0_opsz24.svg" alt="Delete Icon" class="w-6 h-6">
                        </button>
                        <button class="text-gray-500 hover:text-green-600" onclick="editRow(this)">
                            <img src="/assets/icons/edit_24dp_6B7280_FILL0_wght500_GRAD0_opsz24.svg" alt="Edit Icon" class="w-6 h-6">
                        </button>
                    </td>
                </tr>
            `;
            document.getElementById('inventoryBody').insertAdjacentHTML('beforeend', newRow);
            closeModal();
        });
    
        function deleteRow(button) {
            button.closest('tr').remove();
        }
    
        // Add to service modal handling
        function showAddToServiceModal(button) {
            const row = button.closest('tr');
            const itemName = row.cells[0].innerText;
            const itemCount = row.cells[2].innerText;
    
            document.getElementById('inventoryDetails').innerText = `Item: ${itemName}, Available Quantity: ${itemCount}`;
            document.getElementById('addToServiceModal').classList.remove('hidden');
        }
    
        function closeServiceModal() {
            document.getElementById('addToServiceModal').classList.add('hidden');
        }
    
        document.getElementById('addToServiceForm').addEventListener('submit', async function (e) {
            e.preventDefault();
            const serviceCount = document.getElementById('service_item_count').value;
            const inventoryDetails = document.getElementById('inventoryDetails').innerText;
    
            const itemName = inventoryDetails.split(',')[0].replace('Item: ', '').trim();
    
            const newRow = `
                <tr>
                    <td class="p-4">${itemName}</td>
                    <td class="p-4">${new Date().toLocaleDateString()}</td>
                    <td class="p-4 text-center">
                        <button class="text-gray-500 hover:text-red-600" onclick="deleteRow(this)">
                            <img src="/assets/icons/delete_24dp_6B7280_FILL0_wght500_GRAD0_opsz24.svg" alt="Delete Icon" class="w-6 h-6">
                        </button>
                    </td>
                </tr>
            `;
            document.getElementById('serviceBody').insertAdjacentHTML('beforeend', newRow);
            closeServiceModal();
        });
    
        // Edit functionality
        function editRow(button) {
            const row = button.closest('tr');
            const itemName = row.cells[0].innerText;
            const itemCount = row.cells[2].innerText;
    
            // Open modal with pre-filled data
            openModal();
            document.getElementById('inv_prd_name').value = itemName;
            document.getElementById('inv_item_count').value = itemCount;
    
            // Remove the current row to replace it with the edited version
            row.remove();
        }
    
        // Load inventory when the DOM is fully loaded
        document.addEventListener('DOMContentLoaded', () => {
            loadInventory(); // Call the loadInventory function when the DOM is fully loaded
        });
        document.addEventListener('DOMContentLoaded', function () {
            const profileButton = document.getElementById('profileButton');
            const profileDropdown = document.getElementById('profileDropdown');
        
            // Toggle dropdown on button click
            profileButton.addEventListener('click', (event) => {
                event.stopPropagation();
                profileDropdown.classList.toggle('hidden');
            });
        
            // Close dropdown if clicked outside
            document.addEventListener('click', (event) => {
                if (!profileDropdown.classList.contains('hidden') && !profileDropdown.contains(event.target) && event.target !== profileButton) {
                    profileDropdown.classList.add('hidden');
                }
            });
        });
    </script>
    
</body>
</html>
