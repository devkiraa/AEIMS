<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Events</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
        }
    </style>
</head>
<body class="bg-gray-50">
    <div class="min-h-screen flex flex-col">
        <!-- Navbar -->
        <nav class="bg-blue-600 p-4">
            <div class="container mx-auto flex justify-between items-center">
                <!-- Navbar Links -->
                <div class="flex items-center space-x-6">
                    <ul class="flex space-x-6 text-white">
                        <li><a href="/" class="hover:text-gray-300">Home</a></li>
                        <% if (userRole === 'admin' || userRole === 'icts') { %>
                            <li><a href="/book-event" class="hover:text-gray-300">Book</a></li>
                            <li><a href="/user-management" class="hover:text-gray-300">Users</a></li>
                            <li><a href="/inventory" class="hover:text-gray-300">Inventory</a></li>
                            <li><a href="/my-events" class="hover:text-gray-300">My Events</a></li>
                        <% } %>
                        <% if (userRole === 'hod') { %>
                            <li><a href="/user-management" class="hover:text-gray-300">Users</a></li>
                            <li><a href="/dept-events" class="hover:text-gray-300">Dept Events</a></li>
                            <li><a href="/event-approval" class="hover:text-gray-300">Approval</a></li>
                        <% } %>
                        <% if (userRole === 'em') { %>
                            <li><a href="/book-event" class="hover:text-gray-300">Book</a></li>
                            <li><a href="/my-events" class="hover:text-gray-300">My Events</a></li>
                        <% } %>
                        <li><a href="/about-us" class="hover:text-gray-300">About Us</a></li>
                    </ul>
                </div>         

                <div class="relative dropdown">
                    <button class="bg-white rounded-full p-2" id="profileButton">
                        <img src="/assets/icons/avatar.svg" alt="User Icon" class="w-6 h-6">
                    </button>
                    <div class="dropdown-menu absolute hidden right-0 mt-2 w-48 bg-white rounded-lg shadow-lg" id="profileDropdown">
                        <a href="/profile" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">Profile</a>
                        <a href="/change-password" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">Change Password</a>
                        <a href="/logout" class="block px-4 py-2 text-gray-700 hover:bg-gray-100" onclick="sessionStorage.clear()">Logout</a>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Main Content -->
        <main class="flex-grow container mx-auto p-6 max-w-5xl">
            <h1 class="text-3xl font-bold mb-8">My Events</h1>

            <!-- Tabs for Upcoming and Completed Events -->
            <div class="mb-6">
                <ul class="flex divide-x divide-gray-300">
                    <li id="upcoming-tab" class="px-4 text-blue-600 hover:text-gray-700 cursor-pointer" onclick="switchTab('upcoming')">
                        Upcoming Events
                    </li>
                    <li id="completed-tab" class="px-4 text-gray-500 hover:text-gray-700 cursor-pointer" onclick="switchTab('completed')">
                        Completed Events
                    </li>
                </ul>
            </div>

            <!-- Upcoming Events Table -->
            <div id="upcoming" class="tab-content">
                <h2 class="text-xl font-semibold mb-4">Upcoming Events</h2>
                <div class="overflow-x-auto">
                    <table class="min-w-full bg-white border border-gray-300 rounded-lg">
                        <thead>
                            <tr class="bg-gray-100 text-gray-600 text-left">
                                <th class="p-4">Event Name</th>
                                <th class="p-4">Event Date</th>
                                <th class="p-4">Start Time</th>
                                <th class="p-4">Approval Status</th> <!-- New Approval Status Column -->
                                <th class="p-4">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="upcomingEventTable">
                            <!-- Events will be populated dynamically -->
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Completed Events Table -->
            <div id="completed" class="tab-content hidden">
                <h2 class="text-xl font-semibold mb-4">Completed Events</h2>
                <div class="overflow-x-auto">
                    <table class="min-w-full bg-white border border-gray-300 rounded-lg">
                        <thead>
                            <tr class="bg-gray-100 text-gray-600 text-left">
                                <th class="p-4">Event Name</th>
                                <th class="p-4">Event Date</th>
                                <th class="p-4">Start Time</th>
                                <th class="p-4">Approval Status</th>
                            </tr>
                        </thead>
                        <tbody id="completedEventTable">
                            <!-- Events will be populated dynamically -->
                        </tbody>
                    </table>
                </div>
            </div>
        </main>
    </div>

    <script>
        // Profile Dropdown Toggle
        const profileButton = document.getElementById('profileButton');
        const profileDropdown = document.getElementById('profileDropdown');

        profileButton.addEventListener('click', (event) => {
            event.stopPropagation();
            profileDropdown.classList.toggle('hidden');
        });

        document.addEventListener('click', (event) => {
            if (!profileButton.contains(event.target) && !profileDropdown.contains(event.target)) {
                profileDropdown.classList.add('hidden');
            }
        });

        async function fetchUserEvents() {
            try {
                document.getElementById('upcomingEventTable').innerHTML = "<tr><td colspan='4'>Loading...</td></tr>";
                document.getElementById('completedEventTable').innerHTML = "<tr><td colspan='3'>Loading...</td></tr>";

                const response = await fetch('/api/myevents');
                if (!response.ok) throw new Error("Failed to fetch events");

                const events = await response.json();

                const currentDate = new Date().toISOString().split('T')[0];
                const upcomingEvents = events.filter(event => event.event_sd >= currentDate);
                const completedEvents = events.filter(event => event.event_sd < currentDate);

                populateEventTable(upcomingEvents, 'upcomingEventTable', true);
                populateEventTable(completedEvents, 'completedEventTable', false);
            } catch (error) {
                console.error("Error fetching events:", error);
                document.getElementById('upcomingEventTable').innerHTML = "<tr><td colspan='4'>Error loading events.</td></tr>";
                document.getElementById('completedEventTable').innerHTML = "<tr><td colspan='3'>Error loading events.</td></tr>";
            }
        }

        function populateEventTable(events, tableId, showActions) {
            const tableBody = document.getElementById(tableId);
            tableBody.innerHTML = '';

            if (events.length === 0) {
                tableBody.innerHTML = `<tr><td colspan="${showActions ? 4 : 3}">No events found.</td></tr>`;
                return;
            }

            events.forEach(event => {
                const row = document.createElement('tr');
                row.classList.add('border-t', 'border-gray-200');

                row.innerHTML = `
                    <td class="p-4">${event.evn_name}</td>
                    <td class="p-4">${formatDate(event.event_sd)}</td>
                    <td class="p-4">${event.evn_st}</td>
                    <td class="p-4">${event.evn_approval === 1 ? 'Approved' : 'Not Approved'}</td> <!-- Approval Status -->
                     ${showActions ? `
                    <td class="p-4">
                        <button class="text-blue-600 hover:text-blue-800" onclick="editEvent(${event.evn_id})">
                            <img src="/assets/icons/edit_24dp_6B7280_FILL0_wght500_GRAD0_opsz24.svg" alt="edit" class="w-6 h-6">
                        </button>
                        <button class="text-red-600 hover:text-red-800 ml-2" onclick="deleteEvent(${event.evn_id})">
                            <img src="/assets/icons/delete_24dp_6B7280_FILL0_wght500_GRAD0_opsz24.svg" alt="delete" class="w-6 h-6">
                        </button>
                    </td>` : ''}
                `;

                tableBody.appendChild(row);
            });
        }

        function formatDate(dateString) {
            const eventStartDate = new Date(dateString);
            eventStartDate.setTime(eventStartDate.getTime() + 86400000);
            const year = eventStartDate.getFullYear();
            const month = String(eventStartDate.getMonth() + 1).padStart(2, '0');
            const day = String(eventStartDate.getDate()).padStart(2, '0');
            return `${day}-${month}-${year}`;
        }

        function switchTab(tab) {
            document.getElementById('upcoming').classList.toggle('hidden', tab !== 'upcoming');
            document.getElementById('completed').classList.toggle('hidden', tab !== 'completed');
            document.getElementById('upcoming-tab').classList.toggle('text-blue-600', tab === 'upcoming');
            document.getElementById('completed-tab').classList.toggle('text-blue-600', tab === 'completed');
        }

        async function deleteEvent(eventId) {
            if (!confirm("Are you sure you want to delete this event?")) return;
            try {
                const response = await fetch(`/api/delete-event/${eventId}`, { method: 'DELETE' });
                if (!response.ok) throw new Error("Failed to delete event");
                alert("Event deleted successfully");
                fetchUserEvents();
            } catch (error) {
                console.error("Error deleting event:", error);
                alert("Failed to delete event.");
            }
        }

        function editEvent(eventId) {
            window.location.href = `/edit-event/details/${eventId}`;
        }

        // Load events on page load
        fetchUserEvents();
    </script>
</body>
</html>
