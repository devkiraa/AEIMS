<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Change Password</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet"/>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet"/>
    <style>
        body {
            font-family: "Poppins", sans-serif;
        }

        .form-section {
            display: flex;
            justify-content: center;
            gap: 2rem;
        }

        .form-section input {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #ddd;
            border-radius: 0.25rem;
        }

        .form-section button {
            padding: 0.75rem 2rem;
        }

        .error-message {
            color: red !important;
            font-size: 0.875rem;
            text-align: center;
        }

        .success-message {
            color: green;
            font-size: 0.875rem;
            text-align: center;
        }

        .password-rules {
            text-align: center;
            margin-top: 1rem;
            display: none;
        }

        .password-rules ul {
            list-style: none;
            padding: 0;
        }

        .password-rules ul li {
            font-size: 0.875rem;
        }

        .valid {
            color: green !important;
        }

        .invalid {
            color: red !important;
        }

        .center-button {
            display: flex;
            justify-content: center;
            margin-top: 2rem;
        }
    </style>
</head>
<body class="min-h-screen bg-gray-100">
    <!-- Navbar -->
    <nav class="bg-blue-600 p-4">
        <div class="container mx-auto flex justify-between items-center">
            <!-- Navbar Links -->
            <div class="flex items-center space-x-6">
                <ul class="flex space-x-6 text-white">
                    <!-- Home Link - Always First -->
                    <li><a href="/" class="hover:text-gray-300">Home</a></li>

                    <!-- Conditional Links for 'admin' or 'icts' -->
                    <% if (userRole === 'admin' || userRole === 'icts') { %>
                        <li><a href="/book-event" class="hover:text-gray-300">Book</a></li>
                        <li><a href="/user-management" class="hover:text-gray-300">Users</a></li>
                        <li><a href="/inventory" class="hover:text-gray-300">Inventory</a></li>
                        <li><a href="/my-events" class="hover:text-gray-300">My Events</a></li>
                    <% } %>

                    <!-- Conditional Links for 'hod' -->
                    <% if (userRole === 'hod') { %>
                        <li><a href="/user-management" class="hover:text-gray-300">Users</a></li>
                        <li><a href="/dept-events" class="hover:text-gray-300">Dept Events</a></li>
                        <li><a href="/event-approval" class="hover:text-gray-300">Approval</a></li>
                    <% } %>

                    <!-- Conditional Links for 'em' -->
                    <% if (userRole === 'em') { %>
                        <li><a href="/book-event" class="hover:text-gray-300">Book</a></li>
                        <li><a href="/my-events" class="hover:text-gray-300">My Events</a></li>
                    <% } %>

                    <!-- About Us Link - Always Last -->
                    <li><a href="/about-us" class="hover:text-gray-300">About Us</a></li>
                </ul>
            </div>

            <!-- Profile Dropdown (Visible on Click) -->
            <div class="relative dropdown">
                <button class="bg-white rounded-full p-2" id="profileButton">
                    <img src="/assets/icons/avatar.svg" alt="User Icon" class="w-6 h-6"/>
                </button>
                <div class="dropdown-menu absolute hidden right-0 mt-2 w-48 bg-white rounded-lg shadow-lg" id="profileDropdown">   
                    <a href="/profile" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">Profile</a>
                    <a href="/change-password" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">Change Password</a>
                    <a href="/logout" class="block px-4 py-2 text-gray-700 hover:bg-gray-100" onclick="sessionStorage.clear()">Logout</a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Form Section -->
    <div class="container mt-12">
        <h2 class="text-2xl font-semibold mb-6 text-center">Reset Password</h2>

        <!-- Form with Inputs Aligned Horizontally -->
        <div class="form-section">
            <div class="w-1/4">
              <label for="old-password" class="block mb-2 text-gray-700">Current Password</label>
                <input type="password" id="old-password" placeholder="Enter old password....."/>
            </div>
            
            <div class="w-1/4">
                <label for="new-password" class="block mb-2 text-gray-700">New Password</label>
                <input type="password" id="new-password" placeholder="Enter new password....."/>
            </div>
            
            <div class="w-1/4">
                <label for="confirm-password" class="block mb-2 text-gray-700">Confirm Password</label>
                <input type="password" id="confirm-password" placeholder="Re-enter new password....."/>
            </div>
        </div>

        <!-- Centered Save Button -->
        <div class="center-button">
            <button id="save-button" class="bg-blue-600 text-white py-2 px-8 rounded-lg font-medium hover:bg-blue-700">Save</button>
        </div>
        
        <!-- Error Message Container -->
        <div id="error-message" class="error-message mt-4"></div>

        <!-- Password Rules -->
        <div id="password-rules" class="password-rules text-gray-600">
            <ul>
                <li id="rule-length" class="invalid">• Minimum 8 characters</li>
                <li id="rule-uppercase" class="invalid">• Should contain Uppercase (A-Z)</li>
                <li id="rule-number" class="invalid">• Numbers (0-9)</li>
                <li id="rule-special" class="invalid">• Special Characters</li>
            </ul>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const profileButton = document.getElementById("profileButton");
            const profileDropdown = document.getElementById("profileDropdown");

            // Toggle dropdown on button click
            profileButton.addEventListener("click", (event) => {
                event.stopPropagation();
                profileDropdown.classList.toggle("hidden");
            });

            // Close dropdown if clicked outside
            document.addEventListener("click", (event) => {
                if (!profileDropdown.classList.contains("hidden") && !profileDropdown.contains(event.target) && event.target !== profileButton) {
                    profileDropdown.classList.add("hidden");
                }
            });
        });
        const newPassword = document.getElementById("new-password");
        const confirmPassword = document.getElementById("confirm-password");
        const errorMessage = document.getElementById("error-message");
        const passwordRules = document.getElementById("password-rules");

        // Regex Patterns for Validation
        const minLength = /^.{8,}$/;
        const uppercase = /[A-Z]/;
        const numbers = /\d/;
        const specialChars = /[\W_]/;

        // Rule Elements
        const ruleLength = document.getElementById("rule-length");
        const ruleUppercase = document.getElementById("rule-uppercase");
        const ruleNumber = document.getElementById("rule-number");
        const ruleSpecial = document.getElementById("rule-special");

        // Show rules on new password input focus
        newPassword.addEventListener("focus", () => {
            passwordRules.style.display = "block";
        });

        // Hide rules if clicked outside the new password input
        document.addEventListener("click", (event) => {
            if (!newPassword.contains(event.target)) {
                passwordRules.style.display = "none";
            }
        });

        // Validate password and update rules in real-time
        newPassword.addEventListener("input", () => {
            validatePassword(newPassword.value);
        });

        // Validate Function
        function validatePassword(password) {
            // Length validation
            if (minLength.test(password)) {
                ruleLength.classList.add("valid");
                ruleLength.classList.remove("invalid");
            } else {
                ruleLength.classList.add("invalid");
                ruleLength.classList.remove("valid");
            }

            // Uppercase validation
            if (uppercase.test(password)) {
                ruleUppercase.classList.add("valid");
                ruleUppercase.classList.remove("invalid");
            } else {
                ruleUppercase.classList.add("invalid");
                ruleUppercase.classList.remove("valid");
            }

            // Number validation
            if (numbers.test(password)) {
                ruleNumber.classList.add("valid");
                ruleNumber.classList.remove("invalid");
            } else {
                ruleNumber.classList.add("invalid");
                ruleNumber.classList.remove("valid");
            }

            // Special Characters validation
            if (specialChars.test(password)) {
                ruleSpecial.classList.add("valid");
                ruleSpecial.classList.remove("invalid");
            } else {
                ruleSpecial.classList.add("invalid");
                ruleSpecial.classList.remove("valid");
            }
        }

        // Save Button Click
        document.getElementById("save-button").addEventListener("click", async function (e) {
            e.preventDefault();
            errorMessage.textContent = "";

            const oldPassword = document.getElementById("old-password").value;
            const newPass = newPassword.value;
            const confirmPass = confirmPassword.value;

            if (!minLength.test(newPass)) {
                errorMessage.classList.add("error-message");
                errorMessage.textContent = "Password must be at least 8 characters long.";
            } else if (!uppercase.test(newPass)) {
                errorMessage.classList.add("error-message");
                errorMessage.textContent = "Password must contain at least one uppercase letter.";
            } else if (!numbers.test(newPass)) {
                errorMessage.classList.add("error-message");
                errorMessage.textContent = "Password must contain at least one number.";
            } else if (!specialChars.test(newPass)) {
                errorMessage.classList.add("error-message");
                errorMessage.textContent = "Password must contain at least one special character.";
            } else if (newPass !== confirmPass) {
                errorMessage.classList.add("error-message");
                errorMessage.textContent = "New password and confirm password do not match.";
            } else {
                try {
                    // Send API request
                    const response = await fetch('/api/changepassword/', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            oldPassword: oldPassword,
                            newPass: newPass,
                        }),
                    });

                    const result = await response.json();
                    console.log(result);
                    if (result.success) {
                        errorMessage.classList.add("success-message");
                        errorMessage.classList.remove("error-message");
                        errorMessage.textContent = "Password successfully changed!";
                    } else {
                        errorMessage.classList.add("error-message");
                        errorMessage.textContent = result.message || "An error occurred.";
                    }
                } catch (error) {
                    errorMessage.textContent = "An error occurred while changing the password.";
                }
            }
        });
    </script>
</body>
</html>
