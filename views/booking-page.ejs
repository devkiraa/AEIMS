<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Book an Event</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
        }

        /* Blue header section */
        .top-border {
            background-color: #3563E9;
            height: 10vh; /* 10% of the viewport height */
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 20px;
        }

        /* Navigation styles */
        .nav-links {
            display: flex;
            align-items: center;
            list-style: none;
            margin: 0;
        }

        .nav-links li {
            margin: 0 15px;
        }

        .nav-links a {
            text-decoration: none;
            color: white;
            font-size: 16px;
            font-weight: 500;
        }

        /* Button colors for venue status */
        .available {
            background-color: #27AE60;
            color: white;
        }

        .waiting {
            background-color: #F2C94C;
            color: white;
        }

        .booked {
            background-color: #EB5757;
            color: white;
            cursor: not-allowed;
        }

        /* Button styles */
        .venue-btn {
            padding: 12px 24px;
            font-size: 16px;
            border-radius: 8px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            margin: 10px;
        }

        /* Legend styles */
        .legend {
            display: flex;
            align-items: center;
            margin-top: 20px;
        }

        .legend span {
            display: inline-block;
            width: 20px;
            height: 20px;
            border-radius: 4px;
            margin-right: 8px;
        }

        .legend-item {
            display: flex;
            align-items: center;
            margin-right: 20px;
        }

        /* Profile icon */
        .profile-icon {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background-color: white;
        }

        /* Styling for form inputs */
        .input-field {
            width: 170px; /* Fixed width to fit dd-mm-yyyy */
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 6px;
            margin: 0px 0;
        }

        /* Adjusting spacing and alignment between date and time fields */
        .form-row {
            display: flex;
            justify-content: flex-start; /* Align to left */
            align-items: center;
            gap: 170px; /* Space equal to the width of one input */
            margin-bottom: 20px; /* Optional: Add some space below each row */
        }

        .form-row > .input-group {
            display: flex;
            flex-direction: column;
        }

        .quick-row {
            display: flex;
            justify-content: flex-start; /* Align to left */
            align-items: center;
            gap: 40px; /* Space equal to the width of one input */
            margin-bottom: 20px; /* Optional: Add some space below each row */
            margin-top: 35px;
        }

        .event-row {
            display: none; /* Initially hidden */
            justify-content: flex-start; /* Align to left */
            align-items: center;
            gap: 50px; /* Space equal to the width of one input */
            margin-bottom: 20px; /* Optional: Add some space below each row */
        }

        .radio-label {
            display: inline-flex;
            align-items: center;
            margin-right: 1.5rem;
        }

        /* Fixed position for buttons */
        .form-buttons {
            position: fixed;
            bottom: 20px;
            right: 20px;
        }

        /* Next button styling similar to the Add Guest Details page */
        .next-btn {
            background-color: #2563EB; /* Tailwind blue-600 */
            color: white;
            padding: 10px 20px;
            border-radius: 8px;
            font-weight: 500;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .next-btn:hover {
            background-color: #1D4ED8; /* Tailwind blue-700 */
        }

        .venue-btn[disabled] {
            background-color: #cccccc; /* Light gray to indicate disabled state */
            cursor: not-allowed;
        }
    </style>

    <script>
        function toggleEventTitle() {
            const eventTitleRow = document.getElementById('event-row');
            const quickEventRow = document.querySelector('.quick-row');
            const isQuickEvent = document.querySelector('input[name="quick_event"]:checked').value === 'yes';
            const nextButton = document.querySelector('.next-btn');

            if (isQuickEvent) {
                eventTitleRow.style.display = 'flex'; // Show the event title row
                quickEventRow.style.marginBottom = '15px'; // Reduce the margin when 'Yes' is selected
                nextButton.innerHTML = 'Submit'; // Change the text to 'Submit'
            } else {
                eventTitleRow.style.display = 'none'; // Hide the event title row
                quickEventRow.style.marginBottom = '20px'; // Add a 30px margin when 'No' is selected
                nextButton.innerHTML = 'Next <!-- Right Arrow SVG --> <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor"> <path fill-rule="evenodd" d="M12.293 10.707l-5.146 5.146a.5.5 0 01-.708-.708L11.293 10 6.44 5.146a.5.5 0 01.708-.708l5.146 5.146a.5.5 0 010 .708z" clip-rule="evenodd" /> </svg>'; // Change the text to 'Next'
            }
        }

        // Function to set today's date as the minimum for Start Date and End Date
        function setMinDate() {
            const today = new Date().toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format
            document.getElementById('start-date').setAttribute('min', today); // Set min attribute for start date
            document.getElementById('end-date').setAttribute('min', today);   // Set min attribute for end date
        }
        
        async function checkAvailability() {
            const startDate = document.getElementById('start-date').value;
            const endDate = document.getElementById('end-date').value;
            const startTime = document.getElementById('start-time').value;
            const endTime = document.getElementById('end-time').value;

            if (!startDate || !endDate || !startTime || !endTime) return;

            try {
                const response = await fetch('/api/check-availability', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ startDate, endDate, startTime, endTime }),
                });

                if (!response.ok) throw new Error('Failed to fetch venue availability');
                const venues = await response.json(); // Await the JSON parsing

                updateVenues(venues); // Update the venue buttons
            } catch (error) {
                console.error('Error fetching availability:', error);
            }
        }


        function updateVenues(venues) {
            document.querySelectorAll('.venue-btn').forEach((button) => {
                const venueName = button.id; // Extract venue name from button text
                const status = venues[venueName] || 'booked'; // Default to 'booked' if not found

                // Reset any previous status classes
                button.classList.remove('available', 'waiting', 'booked');

                // Apply the new status class
                button.classList.add(status);
            });
        }

        function toggleVenueButtons() {
            const startDate = document.getElementById('start-date').value;
            const endDate = document.getElementById('end-date').value;
            const startTime = document.getElementById('start-time').value;
            const endTime = document.getElementById('end-time').value;

            const allFilled = startDate && endDate && startTime && endTime;

            // Enable or disable the venue buttons based on whether all fields are filled
            document.querySelectorAll('.venue-btn').forEach((button) => {
                button.disabled = !allFilled;
            });

            if (allFilled) checkAvailability(); // Check availability if all inputs are filled
        }

        // Attach event listeners for input changes to trigger availability check and button enablement
        document.addEventListener('DOMContentLoaded', () => {
            ['start-date', 'end-date', 'start-time', 'end-time'].forEach((id) => {
                document.getElementById(id).addEventListener('input', toggleVenueButtons);
            });
        });

        document.addEventListener('DOMContentLoaded', () => {
            ['start-date', 'end-date', 'start-time', 'end-time'].forEach((id) => {
                document.getElementById(id).addEventListener('input', toggleVenueButtons);
            });
        });


        window.onload = function () {
            setMinDate();
        };
    </script>
</head>
<body class="min-h-screen bg-gray-100">
    <!-- Navbar -->
    <nav class="bg-blue-600 p-4">
        <div class="container mx-auto flex justify-between items-center">
            <!-- Move header elements to the left -->
            <div class="flex items-center space-x-6">
                <ul class="flex space-x-6 text-white">
                    <li><a href="#" class="hover:text-gray-300">Home</a></li>
                    <li><a href="#" class="hover:text-gray-300">Create</a></li>
                    <li><a href="#" class="hover:text-gray-300">Users</a></li>
                    <li><a href="#" class="hover:text-gray-300">My Events</a></li>
                    <li><a href="#" class="hover:text-gray-300">About Us</a></li>
                </ul>
            </div>
            <!-- User icon in rounded background -->
            <div class="bg-white rounded-full p-2">
                <a href="#"><img src="/assets/icons/avatar.svg" alt="User Icon" class="w-6 h-6"></a>
            </div>
        </div>
    </nav>

    <!-- Main container -->
    <div class="max-w-7xl mx-auto px-8 py-6">
        <h1 class="text-3xl font-semibold mb-6">Book an Event!</h1>

        <!-- Date and time selection -->
        <div class="form-row">
            <div class="input-group">
                <label class="block mb-2 text-gray-700">Start Date</label>
                <input type="date" id="start-date" class="input-field" required>
            </div>
            <div class="input-group">
                <label class="block mb-2 text-gray-700">End Date</label>
                <input type="date" id="end-date" class="input-field" required>
            </div>
        </div>

        <div class="form-row">
            <div class="input-group">
                <label class="block mb-2 text-gray-700">Start Time</label>
                <input type="time" id="start-time" class="input-field" required>
            </div>
            <div class="input-group">
                <label class="block mb-2 text-gray-700">End Time</label>
                <input type="time" id="end-time" class="input-field" required>
            </div>
        </div>

        <div class="quick-row">
            <label class="block text-gray-700">Quick Event</label>
            <div>
                <label class="radio-label">
                    <input type="radio" name="quick_event" value="yes" onclick="toggleEventTitle()">
                    Yes
                </label>
                <label class="radio-label">
                    <input type="radio" name="quick_event" value="no" checked onclick="toggleEventTitle()">
                    No
                </label>
            </div>
        </div>

        <!-- Event title, hidden by default -->
        <div id="event-row" class="event-row">
            <label for="event_title" class="block text-gray-700">Event Title</label>
            <input type="text" name="event_title" id="event_title" placeholder="Event title...?" class="w-96 p-2 border border-gray-300 rounded mt-1" required>
        </div>

        <!-- Venue buttons -->
        <div class="mb-6">
            <div class="flex flex-wrap">
                <button class="venue-btn available" id="cslb1" disabled>CS Lab 1</button>
                <button class="venue-btn available" id="cslb2" disabled>CS Lab 2</button>
                <button class="venue-btn waiting" id="cslb3" disabled>CS Lab 3</button>
                <button class="venue-btn waiting" id="cslb4" disabled>CS Lab 4</button>
                <button class="venue-btn available" id="cslb5" disabled>CS Lab 5</button>
                <button class="venue-btn booked" id="cslb6" disabled>CS Lab 6</button>
                <button class="venue-btn available" id="audt" disabled>Auditorium</button>
                <button class="venue-btn waiting" id="semh" disabled>Seminar Hall</button>
                <button class="venue-btn waiting" id="confh" disabled>Conference Room</button>
                <button class="venue-btn booked" id="prah" disabled>Prayer Hall</button>
                <button class="venue-btn booked" id="lib" disabled>Library</button>
                <button class="venue-btn booked" id="dal" disabled>Data Analytics Lab</button>
                <button class="venue-btn available" id="cirsh" disabled>CIR Seminar Hall</button>
            </div>
        </div>

        <!-- Legend -->
        <div class="legend">
            <div class="legend-item">
                <span class="available"></span> Available
            </div>
            <div class="legend-item">
                <span class="waiting"></span> Waiting
            </div>
            <div class="legend-item">
                <span class="booked"></span> Booked
            </div>
        </div>

    <!-- Fixed Back and Next buttons -->
    <div class="form-buttons flex space-x-4">
        <button class="next-btn">
            Next
            <!-- Right Arrow SVG -->
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M12.293 10.707l-5.146 5.146a.5.5 0 01-.708-.708L11.293 10 6.44 5.146a.5.5 0 01.708-.708l5.146 5.146a.5.5 0 010 .708z" clip-rule="evenodd" />
            </svg>
        </button>
    </div>
</body>
</html>
